{"version":3,"sources":["src/settings.js","src/partials/Board.js","src/partials/Paddle.js","src/partials/Ball.js","src/partials/Score.js","src/partials/Game.js","src/index.js"],"names":["SVG_NS","GAME_WIDTH","GAME_HEIGHT","PADDLE_WIDTH","PADDLE_HEIGHT","PADDLE_GAP","PADDLE_SPEED","BALL_RADIUS","KEYS","p1up","p1down","p2up","p2down","pause","Board","width","height","svg","boardSvg","document","createElementNS","setAttributeNS","appendChild","lineSvg","Paddle","boardHeight","x","y","keyUp","keyDown","speed","score","addEventListener","event","key","moveUp","moveDown","position","top","left","bottom","right","Math","max","console","log","min","paddleRect","Ball","radius","boardWidth","direction","pingSound","Audio","Ping","vx","vy","reset","random","abs","paddle1","paddle2","increaseScore","getPaddlePosition","hitRight","belowTop","aboveBottom","play","hitLeft","ballCircle","ballMove","wallCollision","paddleCollision","ballCircle2","Score","size","textSvg","textContent","Game","element","paused","gameElement","getElementById","board","paddle_mid","right_gap","ball","score1","score2","setSpeed","innerHTML","render","getScore","game","gameLoop","requestAnimationFrame"],"mappings":"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","file":"src.f5d70b08.js","sourceRoot":"..","sourcesContent":["export const SVG_NS = \"http://www.w3.org/2000/svg\"; \n\nexport const GAME_WIDTH = 512;\nexport const GAME_HEIGHT = 256;  \n\nexport const PADDLE_WIDTH = 8;\nexport const PADDLE_HEIGHT = 56;\nexport const PADDLE_GAP = 10;\n\nexport const PADDLE_SPEED = 30;\nexport const BALL_RADIUS= 8; \n\n\n\n\nexport const KEYS = {\n    p1up: \"ArrowUp\",        // player 1 up key\n    p1down: \"ArrowDown\",        // player 1 down key\n    p2up: \"w\",       // player 2 up key\n    p2down: \"s\",     // player 2 down key\n    pause: \" \", // we'll use this later...\n  }\n","import { SVG_NS } from \"../settings\";\n\nexport default class Board {\n  constructor(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n  render(svg) {\n    //...\n    const boardSvg = document.createElementNS(SVG_NS, \"rect\");\n\n    boardSvg.setAttributeNS(null, \"x\", 0);\n    boardSvg.setAttributeNS(null, \"y\", 0);\n    boardSvg.setAttributeNS(null, \"width\", this.width);\n    boardSvg.setAttributeNS(null, \"height\", this.height);\n    boardSvg.setAttributeNS(null, \"fill\", \"#4A17D4\");\n    svg.appendChild(boardSvg);\n\n    const lineSvg = document.createElementNS(SVG_NS, \"line\");\n\n    lineSvg.setAttributeNS(null, \"x1\", this.width/2);\n    lineSvg.setAttributeNS(null, \"x2\", this.width/2);\n    lineSvg.setAttributeNS(null, \"y1\", 0);\n    lineSvg.setAttributeNS(null, \"y2\", this.height);\n    lineSvg.setAttributeNS(null, \"stroke\", \"#00F5FF\");\n    lineSvg.setAttributeNS(null, \"stroke-width\", 4);\n    lineSvg.setAttributeNS(null, \"stroke-dasharray\", \"20 15\", \"#00F5FF\");\n    svg.appendChild(lineSvg);\n  }\n}\n\n","import { SVG_NS, PADDLE_SPEED } from \"../settings\";\n\nexport default class Paddle {\n  constructor(boardHeight, width, height, x, y, keyUp, keyDown) {\n    this.boardHeight = boardHeight;\n    this.width = width;\n    this.height = height;\n    this.x = x;\n    this.y = y;\n    this.speed = PADDLE_SPEED;\n    this.score = 0;\n    //pass key pressed element here\n    document.addEventListener(\"keydown\", event => {\n      switch (event.key) {\n        case keyUp:\n          this.moveUp();\n          break;\n        case keyDown:\n          this.moveDown();\n          break;\n      }\n    });\n  }\n\n  setSpeed(speed) {\n    this.speed = speed;\n  }\n\n  getScore() {\n    return this.score\n  }\n\n  increaseScore() {\n    this.score = this.score + 1;\n  }\n\n  getPaddlePosition() {\n    const position = {\n      top: this.y,\n      left: this.x,\n      bottom: this.y + this.height,\n      right: this.x + this.width,\n    };\n\n    return position;\n  }\n\n  //moves paddle up\n\n  moveUp() {\n    this.y = Math.max(0, this.y - this.speed);\n    console.log(\"up! was pressed\");\n\n  }\n\n  //moves paddle down\n\n  moveDown() {\n    this.y = Math.min(this.boardHeight - this.height, this.y + this.speed);\n    console.log(\"down! was pressed\");\n\n  }\n\n  render(svg) {\n    let paddleRect = document.createElementNS(SVG_NS, \"rect\");\n\n    paddleRect.setAttributeNS(null, \"x\", this.x);\n    paddleRect.setAttributeNS(null, \"y\", this.y);\n    paddleRect.setAttributeNS(null, \"width\", this.width);\n    paddleRect.setAttributeNS(null, \"height\", this.height);\n    paddleRect.setAttributeNS(null, \"fill\", \"white\");\n\n    svg.appendChild(paddleRect);\n  }\n}\n","import { SVG_NS } from \"../settings\";\nimport Ping from \"../../public/sounds/pong-01.wav\";\n\nexport default class Ball {\n  constructor(radius, boardWidth, boardHeight) {\n    this.radius = radius;\n    this.boardWidth = boardWidth;\n    this.boardHeight = boardHeight;\n    this.direction = 1;\n    this.pingSound = new Audio(Ping);\n    this.x = this.boardWidth / 2;\n    this.y = this.boardHeight / 2;\n    this.direction = 1;\n    this.vx = 1;\n    this.vy = 1;\n    this.reset();\n  }\n\n  reset() {\n    this.x = this.boardWidth / 2;\n    this.y = this.boardHeight / 2;\n    this.vy = 0;\n    while (this.vy === 0) {\n      this.vy = Math.random() * 10 - 5;\n    }\n    this.vx = (6 - Math.abs(this.vy)) * this.direction;\n  }\n\n  wallCollision(paddle1, paddle2) {\n    if (this.y + this.radius >= this.boardHeight || this.y - this.radius <= 0) {\n      this.vy = this.vy * -1;\n    }\n\n    if (this.x - this.radius >= this.boardWidth) {\n      paddle1.increaseScore();\n      this.direction = -1;\n      this.reset();\n    } else if (this.x + this.radius <= 0) {\n      paddle2.increaseScore();\n      this.direction = 1;\n      this.reset();\n    }\n  }\n\n  paddleCollision(paddle1, paddle2) {\n    if (this.vx < 0) {\n      const position = paddle1.getPaddlePosition();\n      const hitRight = this.x + this.radius <= position.right;\n      const belowTop = this.y - this.radius >= position.top;\n      const aboveBottom = this.y + this.radius <= position.bottom;\n\n      if (hitRight && belowTop && aboveBottom) {\n        this.pingSound.play();\n        this.vx = this.vx * -1;\n      }\n    } else {\n      const position = paddle2.getPaddlePosition();\n      const hitLeft = this.x - this.radius >= position.left;\n      const belowTop = this.y - this.radius >= position.top;\n      const aboveBottom = this.y + this.radius <= position.bottom;\n      console.log(hitLeft, belowTop, aboveBottom);\n      if (hitLeft && belowTop && aboveBottom) {\n        this.pingSound.play();\n        this.vx = this.vx * -1;\n      }\n    }\n  }\n\n  ballMove() {\n    this.x = this.x + this.vx;\n    this.y = this.y + this.vy;\n  }\n\n  render(svg, paddle1, paddle2) {\n    let ballCircle = document.createElementNS(SVG_NS, \"circle\");\n\n    ballCircle.setAttributeNS(null, \"r\", this.radius);\n    ballCircle.setAttributeNS(null, \"cx\", this.x);\n    ballCircle.setAttributeNS(null, \"cy\", this.y);\n    ballCircle.setAttributeNS(null, \"fill\", \"#FF4F00\");\n    svg.appendChild(ballCircle);\n    this.ballMove();\n    this.wallCollision(paddle1, paddle2);\n    this.paddleCollision(paddle1, paddle2);\n  }\n  \n  render(svg, paddle1, paddle2){\n    let ballCircle2 = document.createElementNS(SVG_NS, \"circle\");\n\n    ballCircle2.setAttributeNS(null, \"r\", this.radius);\n    ballCircle2.setAttributeNS(null, \"cx\", this.x);\n    ballCircle2.setAttributeNS(null, \"cy\", this.y);\n    ballCircle2.setAttributeNS(null, \"fill\", \"orangered\");\n    svg.appendChild(ballCircle2);\n    this.ballMove();\n    this.wallCollision(paddle1, paddle2);\n    this.paddleCollision(paddle1, paddle2);\n  }\n}\n","import { SVG_NS } from \"../settings\";\n\nexport default class Score {\n  constructor(x, y, size) {\n    this.x = x;\n    this.y = y;\n    this.size = size;\n  }\n\n  render(svg, score) {\n    const textSvg = document.createElementNS(SVG_NS, \"text\");\n    textSvg.setAttributeNS(null, \"x\", this.x);\n    textSvg.setAttributeNS(null, \"y\", this.y);\n    textSvg.setAttributeNS(null, \"font-family\", \"'Silkscreen Web', monotype\");\n    textSvg.setAttributeNS(null, \"font-size\", this.size);\n    textSvg.setAttributeNS(null, \"fill\", \"#ffdd00\");\n    textSvg.textContent = score;\n    svg.appendChild(textSvg);\n  }\n}","import {\n  SVG_NS,\n  PADDLE_WIDTH,\n  PADDLE_HEIGHT,\n  BALL_RADIUS,\n  PADDLE_GAP,\n  PADDLE_SPEED,\n  KEYS\n\n  //add codepen file for key pressed to game.js\n  //game stop variable just like game paused variable\n} from \"../settings\";\nimport Board from \"./Board\";\nimport Paddle from \"./Paddle\";\nimport Ball from \"./Ball\";\nimport Score from \"./Score\";\n\nexport default class Game {\n  constructor(element, width, height) {\n    this.element = element;\n    this.width = width;\n    this.height = height;\n    this.paused = false;\n    this.gameElement = document.getElementById(this.element);\n    this.board = new Board(this.width, this.height);\n\n    const paddle_mid = (this.height - PADDLE_HEIGHT) / 2;\n    const right_gap = this.width - PADDLE_GAP - PADDLE_WIDTH;\n    this.paddle1 = new Paddle(\n      this.height,\n      PADDLE_WIDTH,\n      PADDLE_HEIGHT,\n      PADDLE_GAP,\n      paddle_mid,\n      KEYS.p2up,\n      KEYS.p2down\n    );\n    this.paddle2 = new Paddle(\n      this.height,\n      PADDLE_WIDTH,\n      PADDLE_HEIGHT,\n      right_gap,\n      paddle_mid,\n      KEYS.p1up,\n      KEYS.p1down\n    );\n    this.ballCircle = new Ball(BALL_RADIUS, this.width, this.height);\n\n    this.ballCircle2 = new Ball(BALL_RADIUS, this.width, this.height);\n\n    this.ball = new Ball(BALL_RADIUS, this.width, this.height);\n\n    this.score1 = new Score(this.width / 2 - 50, 30, 30);\n\n    this.score2 = new Score(this.width / 2 + 25, 30, 30);\n\n    // Other code goes here...\n    document.addEventListener(\"keydown\", event => {\n      if (event.key === \" \") {\n        this.paused = !this.paused;\n        if (this.paused === true) {\n          this.paddle1.setSpeed(0);\n          this.paddle2.setSpeed(0);\n        } else {\n          this.paddle1.setSpeed(PADDLE_SPEED);\n          this.paddle2.setSpeed(PADDLE_SPEED);\n        }\n      }\n    });\n\n    \n  }\n\n  render() {\n    // More code goes here....\n    if (this.paused === false) {\n      this.gameElement.innerHTML = \"\";\n      let svg = document.createElementNS(SVG_NS, \"svg\");\n      svg.setAttributeNS(null, \"width\", this.width);\n      svg.setAttributeNS(null, \"height\", this.height);\n      svg.setAttributeNS(null, \"viewBox\", `0 0 ${this.width} ${this.height}`);\n      this.gameElement.appendChild(svg);\n\n      this.board.render(svg);\n      this.paddle1.render(svg);\n      this.paddle2.render(svg);\n      this.ballCircle.render(svg, this.paddle1, this.paddle2);\n      this.score1.render(svg, this.paddle1.getScore());\n      this.score2.render(svg, this.paddle2.getScore());\n    }\n  }\n}\n","import './styles/game.css';\nimport Game from './partials/Game'; \nimport {GAME_WIDTH, GAME_HEIGHT} from './settings';\n\n// create a game instance\nconst game = new Game('game', GAME_WIDTH, GAME_HEIGHT);\n\n(function gameLoop() {\n  game.render();\n  requestAnimationFrame(gameLoop);\n})();\n\n"]}